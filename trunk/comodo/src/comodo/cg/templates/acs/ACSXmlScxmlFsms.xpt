«REM»
/**
 * COMODO - Multiplatform Component Code Generator 
 * Copyright (C) 2010/2011  Alexis Tejeda, alexis.tejeda@gmail.com
 * in colaboration with ESO.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 *
 * who          when      		what
 * ---------    -----------     ------------------------------------------------
 * nmigliorini 	2011-00-00  	Created
 * atejeda 	    2011-03-29  	Modified name extension
 * 
 * $Id$
 */
«ENDREM»

«IMPORT uml»

«EXTENSION cg::templates::zzutil::scxmlutil»
«EXTENSION cg::templates::zzutil::zzzacshelpers»

«DEFINE Root FOR StateMachine»

«REM» Generate SCXML Model «ENDREM»
«FILE getPackage(this.getModel()).name+"/scxml/"+this.name+"/"+this.name+".xml"»
	«REM» Write the headers «ENDREM»
	«EXPAND cg::templates::acs::ACSXmlScxmlCode::Headers»
	«REM» Select TopStates and explore «ENDREM»
	«FOREACH listStates().select(e|e.isTopState()).sortBy(e|e.name) AS st» 
		«EXPAND ExploreState FOR st»
	«ENDFOREACH»	
	«REM» Outer FinalStates «ENDREM»
	«EXPAND cg::templates::acs::ACSXmlScxmlCode::FinalState»
	«EXPAND cg::templates::acs::ACSXmlScxmlCode::CloseScxml»
«ENDFILE»
«REM» JAVA Custom Actions List«ENDREM»
«IF !(this.allOwnedElements().typeSelect(State).entry.isEmpty) ||
	!(this.allOwnedElements().typeSelect(State).exit.isEmpty) || 
	!(this.allOwnedElements().typeSelect(Transition).hasAction().isEmpty)»
	«EXPAND cg::templates::acs::ACSJavaScxmlCustomActionCode::CActionList»
«ENDIF»
«IF !(this.allOwnedElements().typeSelect(State).doActivity.isEmpty)»
	«EXPAND cg::templates::acs::ACSJavaScxmlInvokerCode::JavaInvoker»
	
	«EXPAND cg::templates::acs::ACSJavaScxmlActivityThreadCode::ActivityThread»

	«EXPAND cg::templates::acs::ACSJavaScxmlApplicationCode::Application»
«ENDIF»
«ENDDEFINE»

«REM» Explore Generic States «ENDREM»
«DEFINE ExploreState FOR State»
	«IF this.isSimple()»
		«EXPAND ExploreSimpleState»
	«ELSE»
		«IF this.isComposite()»
			«EXPAND ExploreCompState»
		«ENDIF»
	«ENDIF»	
«ENDDEFINE»

«REM» Explore Simple States «ENDREM»
«DEFINE ExploreSimpleState FOR State»
	«IF this.isFinalState()»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::SimFinalState»
	«ELSE»	
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::StateName»
		«EXPAND ExploreActions»
		«EXPAND ExploreTransitions»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::CloseState»
	«ENDIF»
«ENDDEFINE»

«REM» Explore Complex States «ENDREM»
«DEFINE ExploreCompState FOR State»
	«IF this.isOrthogonal()»
		«EXPAND ExploreOrthState»
	«ELSEIF !this.listStates().isEmpty»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::StateName»
		<initial><transition target="«this.getInitialState().getFullName()»"/></initial>
		«FOREACH this.listCompChilds() AS cc»
			«EXPAND ExploreCompState FOR cc»
		«ENDFOREACH»
		«FOREACH this.listSimpleChilds() AS sc»
			«EXPAND ExploreSimpleState FOR sc»
		«ENDFOREACH»
		«IF this.hasHistory()»
			«EXPAND ExploreHistory»
		«ENDIF»
		«EXPAND ExploreActions»
		«EXPAND ExploreTransitions»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::CloseState»
	«ELSE»
		«EXPAND ExploreSimpleState»
	«ENDIF»
«ENDDEFINE»

«REM» Explore Orthogonal States «ENDREM»
«REM» Parallel Regions MUST have a nome in the ecore model  «ENDREM»
«REM» Parallel Regions are mapped as Complex states: a default state is needed «ENDREM»
«DEFINE ExploreOrthState FOR State»
	<parallel id="«this.getFullName()»">
		«FOREACH this.allOwnedElements().typeSelect(Region).select(e|(e.owner == this)) AS oreg»
		<state id="«oreg.getFullName()»">
			<initial><transition target="«oreg.getInitialState().getFullName()»"/></initial>
		«FOREACH oreg.allOwnedElements().typeSelect(State).select(e|(e.owner == oreg)) AS ost»
			«EXPAND ExploreState FOR ost»
		«ENDFOREACH»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::CloseState»
	«ENDFOREACH»
	«IF this.hasHistory()»
		«EXPAND ExploreHistory»
	«ENDIF»
	«EXPAND ExploreActions»
	«EXPAND ExploreTransitions»
	</parallel>
«ENDDEFINE»			

«REM» Explore Actions and Activities «ENDREM»
«DEFINE ExploreActions FOR State»
	«IF this.hasOnEntry()»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::CAEntry»
		«EXPAND cg::templates::acs::ACSJavaScxmlCustomActionCode::JCAEntry»
	«ENDIF»
	«IF this.hasDoActions()»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::Invoke»
		«EXPAND cg::templates::acs::ACSJavaScxmlActivityThreadCode::InvActivity» 
	«ENDIF» 
	«IF this.hasOnExit()»
		«EXPAND cg::templates::acs::ACSXmlScxmlCode::CAExit»
		«EXPAND cg::templates::acs::ACSJavaScxmlCustomActionCode::JCAExit»
	«ENDIF»
«ENDDEFINE»

«REM» Explore Transitions «ENDREM»
«DEFINE ExploreTransitions FOR State»
	«FOREACH this.outgoing.sortBy(e|e.name) AS tr»
		«IF tr.isInternalTransition()»
			«tr.getIntTransition()»
		«ELSE»
			«tr.getTransition()»
		«ENDIF»
		«IF tr.hasAction()»
			«EXPAND cg::templates::acs::ACSJavaScxmlCustomActionCode::JCATran FOR tr»
		«ENDIF»
	«ENDFOREACH»
«ENDDEFINE»

«REM» Explore History «ENDREM»
«DEFINE ExploreHistory FOR State»
	«FOREACH this.getHistory() AS hs»
		<history id="«hs.container.getFullName()»:«hs.name»" «hs.historyType()»>
			<transition target="«hs.outgoing.get(0).target.container.getFullName()»:«hs.outgoing.get(0).target.name»"/>
		</history>
	«ENDFOREACH»
«ENDDEFINE»