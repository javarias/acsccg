«REM»
/** 
 * COMODO - Multiplatform Component Code Generator 
 *    (c) European Southern Observatory, 2011 
 *    Copyright by ESO 
 *    All rights reserved 
 * 
 * Author: Alexis Tejeda
 * 
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * $Id$
 * 
 */
«ENDREM»

«IMPORT uml»

«EXTENSION cg::templates::zzutil::common»
«EXTENSION cg::templates::zzutil::zzdev»
«EXTENSION cg::templates::zzutil::tsort»
«EXTENSION cg::templates::zzutil::java»
«EXTENSION cg::templates::zzutil::idl»
«EXTENSION cg::templates::zzutil::python»

«DEFINE Root FOR uml::Model»
«FOREACH getEInterfaces(getPackage(this)) AS eElement -»

«FILE  getPackage(this).name+'/idl/'+eElement.name+'.idl'-»
/*******************************************************************************
 * ALMA - Atacama Large Millimiter Array
 *
 * (c) European Southern Observatory, 2002
 * Copyright by ESO (in the framework of the ALMA collaboration)
 * and Cosylab 2002, All rights reserved
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 *
 * "@(#) «getPropSet('Id')»"
 *
 *	who                 when                             what
 * ----------------    -----------------------------    ------------------------
 * ACSCCG              «getCommentDate()»     Creation of the file
 * 
 */

#ifndef _«eElement.name-»_IDL
#define _«eElement.name-»_IDL

#include <«getPackage(this).name»Common.idl>
«IF isECharacteristic(eElement)-»
#include <baci.idl>
«ELSE-»
#include <acscomponent.idl>
«ENDIF-»
«IF hasParent(eElement)-»
«FOREACH getParents(eElement) AS eParent-» 
«IF !isACSInterface(eParent.name,this)-»
#include <«eParent.name».idl>
«ENDIF-»
«ENDFOREACH-»
«ENDIF-»
«IF !getEExceptions(getPackage(this)).isEmpty-»
#include <«getPackage(this).name»Err.idl>
«ENDIF-»

#pragma prefix "alma"

/** 
 * @file «eElement.name».idl
 */
module «getPackage(this).name»
{
	/**«IF hasComment(eElement)»«FOREACH getCommentsWrapped(getComment(eElement)) AS comment»
	 *«comment»«ENDFOREACH»«ENDIF»
	 * @interface «eElement.name»
	 */
	interface «eElement.name» : «IF isECharacteristic(eElement)»ACS::CharacteristicComponent«ELSE»ACS::ACSComponent«ENDIF»«IF hasParent(eElement)», «FOREACH getParents(eElement) AS eParent SEPARATOR ', '-»«getCorrectIDLSyntax(eParent.name,this)»«ENDFOREACH-»«ENDIF» 
	{
		«IF isECharacteristic(eElement)-»
		«FOREACH getEReadOnlyProperties(eElement) AS eCharacteristicProperty»
		«IF hasComment(eCharacteristicProperty)»/* «getComment(eCharacteristicProperty)» */«ELSE-»«ENDIF»
		readonly attribute ACS::RO«eCharacteristicProperty.getBaciType()» «eCharacteristicProperty.name»;
		«ENDFOREACH-»
		«FOREACH getEReadWriteProperties(eElement) AS eCharacteristicProperty»
		«IF hasComment(eCharacteristicProperty)»/* «getComment(eCharacteristicProperty)» */«ELSE-»«ENDIF»
		readonly attribute ACS::RW«eCharacteristicProperty.getBaciType()» «eCharacteristicProperty.name»;
		«ENDFOREACH-»
		«ENDIF-»
		
		«FOREACH eElement.getOperations() AS eOperation-»
		/**«IF hasComment(eOperation)»«FOREACH getCommentsWrapped(getComment(eOperation)) AS comment»
		 *«comment»«ENDFOREACH»«ENDIF»
		«FOREACH eOperation.ownedParameter.select(e|e.direction.toString()!= 'return') AS cParam-»
		 * @param «cParam.name» «IF hasComment(cParam)»«getComment(cParam)»«ELSE-»«ENDIF»
		 «ENDFOREACH-»
		 * @return «getIDLReturnType(eOperation)»
		 */
		«getIDLReturnType(eOperation)» «eOperation.name-»(«FOREACH eOperation.ownedParameter.select(e|e.direction.toString()!= 'return') AS param SEPARATOR ', '-»«param.direction.toString()-» «getIDLCorrectCaseString(param.type.name,this)-»«IF isETypeModifier(param)»Sequence«ENDIF» «param.name-»«ENDFOREACH-»)«IF getRaisedExceptions(eOperation).isEmpty»;«ELSE»
			raises(«FOREACH getRaisedExceptions(eOperation) AS eRaisedException  SEPARATOR ', '»«getPackage(this).name»Err::«eRaisedException.name»Ex«ENDFOREACH»);«ENDIF»                             
		
		«ENDFOREACH-»
		«FOREACH getROProperties(eElement) AS roAttribute»
		«IF hasComment(roAttribute)»/* «getComment(roAttribute)» */«ELSE-»«ENDIF-»
		readonly attribute «roAttribute.type.name.toLowerCase()» «roAttribute.name»;
		«ENDFOREACH-»
		«FOREACH getStaticProperties(eElement) AS sAttribute»
		«IF hasComment(sAttribute)»/* «getComment(sAttribute)» */«ELSE-»«ENDIF-»
		const «sAttribute.type.name.toLowerCase()» «sAttribute.name» = «sAttribute.getDefault()»;
		«ENDFOREACH-»
	};
};
#endif /* _«eElement.name»_IDL */
«ENDFILE»

«ENDFOREACH»
«ENDDEFINE»