// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v1.8.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:426


#include "StopWatchC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "StopWatchC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for STOPWATCH_MODULE::StopWatch.

STOPWATCH_MODULE::StopWatch_ptr
TAO::Objref_Traits<STOPWATCH_MODULE::StopWatch>::duplicate (
    STOPWATCH_MODULE::StopWatch_ptr p)
{
  return STOPWATCH_MODULE::StopWatch::_duplicate (p);
}

void
TAO::Objref_Traits<STOPWATCH_MODULE::StopWatch>::release (
    STOPWATCH_MODULE::StopWatch_ptr p)
{
  ::CORBA::release (p);
}

STOPWATCH_MODULE::StopWatch_ptr
TAO::Objref_Traits<STOPWATCH_MODULE::StopWatch>::nil (void)
{
  return STOPWATCH_MODULE::StopWatch::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<STOPWATCH_MODULE::StopWatch>::marshal (
    const STOPWATCH_MODULE::StopWatch_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*STOPWATCH_MODULE__TAO_StopWatch_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj) = 0;

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

char *
STOPWATCH_MODULE::StopWatch::getDisplay (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "getDisplay",
      10,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

char *
STOPWATCH_MODULE::StopWatch::getCurrentState (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "getCurrentState",
      15,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::fireEvent (
  const char * event)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_event (event);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_event
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "fireEvent",
      9,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::start (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "start",
      5,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::stop (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "stop",
      4,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::split (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "split",
      5,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::unsplit (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "unsplit",
      7,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::reset (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StopWatch_Proxy_Broker_ == 0)
    {
      STOPWATCH_MODULE_StopWatch_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "reset",
      5,
      this->the_TAO_StopWatch_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
  
  return _tao_retval.retn ();
}

STOPWATCH_MODULE::StopWatch::StopWatch (void)
 : the_TAO_StopWatch_Proxy_Broker_ (0)
{
  this->STOPWATCH_MODULE_StopWatch_setup_collocation ();
}

void
STOPWATCH_MODULE::StopWatch::STOPWATCH_MODULE_StopWatch_setup_collocation ()
{
  if (::STOPWATCH_MODULE__TAO_StopWatch_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_StopWatch_Proxy_Broker_ =
        ::STOPWATCH_MODULE__TAO_StopWatch_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->ACS_ACSComponent_setup_collocation ();
}

STOPWATCH_MODULE::StopWatch::~StopWatch (void)
{}

void 
STOPWATCH_MODULE::StopWatch::_tao_any_destructor (void *_tao_void_pointer)
{
  StopWatch *_tao_tmp_pointer =
    static_cast<StopWatch *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

STOPWATCH_MODULE::StopWatch_ptr
STOPWATCH_MODULE::StopWatch::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<StopWatch>::narrow (
        _tao_objref,
        "IDL:alma/STOPWATCH_MODULE/StopWatch:1.0",
        STOPWATCH_MODULE__TAO_StopWatch_Proxy_Broker_Factory_function_pointer
      );
}

STOPWATCH_MODULE::StopWatch_ptr
STOPWATCH_MODULE::StopWatch::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<StopWatch>::unchecked_narrow (
        _tao_objref,
        "IDL:alma/STOPWATCH_MODULE/StopWatch:1.0",
        STOPWATCH_MODULE__TAO_StopWatch_Proxy_Broker_Factory_function_pointer
      );
}

STOPWATCH_MODULE::StopWatch_ptr
STOPWATCH_MODULE::StopWatch::_duplicate (StopWatch_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void
STOPWATCH_MODULE::StopWatch::_tao_release (StopWatch_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::_is_a (const char *value)
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:alma/ACS/ACSComponent:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:alma/STOPWATCH_MODULE/StopWatch:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* STOPWATCH_MODULE::StopWatch::_interface_repository_id (void) const
{
  return "IDL:alma/STOPWATCH_MODULE/StopWatch:1.0";
}

::CORBA::Boolean
STOPWATCH_MODULE::StopWatch::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:76

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_STOPWATCH_MODULE_StopWatch (
    ::CORBA::tk_objref,
    "IDL:alma/STOPWATCH_MODULE/StopWatch:1.0",
    "StopWatch");
  

namespace STOPWATCH_MODULE
{
  ::CORBA::TypeCode_ptr const _tc_StopWatch =
    &_tao_tc_STOPWATCH_MODULE_StopWatch;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:49
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<STOPWATCH_MODULE::StopWatch>::to_object (
      ::CORBA::Object_ptr &_tao_elem
    ) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace STOPWATCH_MODULE
{
  
  
  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      StopWatch_ptr _tao_elem)
  {
    StopWatch_ptr _tao_objptr =
      StopWatch::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }
  
  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      StopWatch_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<StopWatch>::insert (
        _tao_any,
        StopWatch::_tao_any_destructor,
        _tc_StopWatch,
        *_tao_elem)
  }
  
  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      StopWatch_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<StopWatch>::extract (
          _tao_any,
          StopWatch::_tao_any_destructor,
          _tc_StopWatch,
          _tao_elem)
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    STOPWATCH_MODULE::StopWatch_ptr _tao_elem)
{
  STOPWATCH_MODULE::StopWatch_ptr _tao_objptr =
    STOPWATCH_MODULE::StopWatch::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    STOPWATCH_MODULE::StopWatch_ptr *_tao_elem)
{
  TAO::Any_Impl_T<STOPWATCH_MODULE::StopWatch>::insert (
      _tao_any,
      STOPWATCH_MODULE::StopWatch::_tao_any_destructor,
      STOPWATCH_MODULE::_tc_StopWatch,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    STOPWATCH_MODULE::StopWatch_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<STOPWATCH_MODULE::StopWatch>::extract (
        _tao_any,
        STOPWATCH_MODULE::StopWatch::_tao_any_destructor,
        STOPWATCH_MODULE::_tc_StopWatch,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const STOPWATCH_MODULE::StopWatch_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    STOPWATCH_MODULE::StopWatch_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::STOPWATCH_MODULE::StopWatch RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        STOPWATCH_MODULE__TAO_StopWatch_Proxy_Broker_Factory_function_pointer
      );
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



