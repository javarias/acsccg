# Python stubs generated by omniidl from ../idl/StopWatch.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")

#
# Start of module "STOPWATCH_MODULE"
#
__name__ = "STOPWATCH_MODULE"
_0_STOPWATCH_MODULE = omniORB.openModule("STOPWATCH_MODULE", r"../idl/StopWatch.idl")
_0_STOPWATCH_MODULE__POA = omniORB.openModule("STOPWATCH_MODULE__POA", r"../idl/StopWatch.idl")


# interface StopWatch
_0_STOPWATCH_MODULE._d_StopWatch = (omniORB.tcInternal.tv_objref, "IDL:alma/STOPWATCH_MODULE/StopWatch:1.0", "StopWatch")
omniORB.typeMapping["IDL:alma/STOPWATCH_MODULE/StopWatch:1.0"] = _0_STOPWATCH_MODULE._d_StopWatch
_0_STOPWATCH_MODULE.StopWatch = omniORB.newEmptyClass()
class StopWatch (_0_ACS.ACSComponent):
    _NP_RepositoryId = _0_STOPWATCH_MODULE._d_StopWatch[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_STOPWATCH_MODULE.StopWatch = StopWatch
_0_STOPWATCH_MODULE._tc_StopWatch = omniORB.tcInternal.createTypeCode(_0_STOPWATCH_MODULE._d_StopWatch)
omniORB.registerType(StopWatch._NP_RepositoryId, _0_STOPWATCH_MODULE._d_StopWatch, _0_STOPWATCH_MODULE._tc_StopWatch)

# StopWatch operations and attributes
StopWatch._d_getDisplay = ((), ((omniORB.tcInternal.tv_string,0), ), None)
StopWatch._d_getCurrentState = ((), ((omniORB.tcInternal.tv_string,0), ), None)
StopWatch._d_fireEvent = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, ), None)
StopWatch._d_start = ((), (omniORB.tcInternal.tv_boolean, ), None)
StopWatch._d_stop = ((), (omniORB.tcInternal.tv_boolean, ), None)
StopWatch._d_split = ((), (omniORB.tcInternal.tv_boolean, ), None)
StopWatch._d_unsplit = ((), (omniORB.tcInternal.tv_boolean, ), None)
StopWatch._d_reset = ((), (omniORB.tcInternal.tv_boolean, ), None)

# StopWatch object reference
class _objref_StopWatch (_0_ACS._objref_ACSComponent):
    _NP_RepositoryId = StopWatch._NP_RepositoryId

    def __init__(self):
        _0_ACS._objref_ACSComponent.__init__(self)

    def getDisplay(self, *args):
        return _omnipy.invoke(self, "getDisplay", _0_STOPWATCH_MODULE.StopWatch._d_getDisplay, args)

    def getCurrentState(self, *args):
        return _omnipy.invoke(self, "getCurrentState", _0_STOPWATCH_MODULE.StopWatch._d_getCurrentState, args)

    def fireEvent(self, *args):
        return _omnipy.invoke(self, "fireEvent", _0_STOPWATCH_MODULE.StopWatch._d_fireEvent, args)

    def start(self, *args):
        return _omnipy.invoke(self, "start", _0_STOPWATCH_MODULE.StopWatch._d_start, args)

    def stop(self, *args):
        return _omnipy.invoke(self, "stop", _0_STOPWATCH_MODULE.StopWatch._d_stop, args)

    def split(self, *args):
        return _omnipy.invoke(self, "split", _0_STOPWATCH_MODULE.StopWatch._d_split, args)

    def unsplit(self, *args):
        return _omnipy.invoke(self, "unsplit", _0_STOPWATCH_MODULE.StopWatch._d_unsplit, args)

    def reset(self, *args):
        return _omnipy.invoke(self, "reset", _0_STOPWATCH_MODULE.StopWatch._d_reset, args)

    __methods__ = ["getDisplay", "getCurrentState", "fireEvent", "start", "stop", "split", "unsplit", "reset"] + _0_ACS._objref_ACSComponent.__methods__

omniORB.registerObjref(StopWatch._NP_RepositoryId, _objref_StopWatch)
_0_STOPWATCH_MODULE._objref_StopWatch = _objref_StopWatch
del StopWatch, _objref_StopWatch

# StopWatch skeleton
__name__ = "STOPWATCH_MODULE__POA"
class StopWatch (_0_ACS__POA.ACSComponent):
    _NP_RepositoryId = _0_STOPWATCH_MODULE.StopWatch._NP_RepositoryId


    _omni_op_d = {"getDisplay": _0_STOPWATCH_MODULE.StopWatch._d_getDisplay, "getCurrentState": _0_STOPWATCH_MODULE.StopWatch._d_getCurrentState, "fireEvent": _0_STOPWATCH_MODULE.StopWatch._d_fireEvent, "start": _0_STOPWATCH_MODULE.StopWatch._d_start, "stop": _0_STOPWATCH_MODULE.StopWatch._d_stop, "split": _0_STOPWATCH_MODULE.StopWatch._d_split, "unsplit": _0_STOPWATCH_MODULE.StopWatch._d_unsplit, "reset": _0_STOPWATCH_MODULE.StopWatch._d_reset}
    _omni_op_d.update(_0_ACS__POA.ACSComponent._omni_op_d)

StopWatch._omni_skeleton = StopWatch
_0_STOPWATCH_MODULE__POA.StopWatch = StopWatch
omniORB.registerSkeleton(StopWatch._NP_RepositoryId, StopWatch)
del StopWatch
__name__ = "STOPWATCH_MODULE"

#
# End of module "STOPWATCH_MODULE"
#
__name__ = "StopWatch_idl"

_exported_modules = ( "STOPWATCH_MODULE", )

# The end.
