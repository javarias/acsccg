«IMPORT uml»
«EXTENSION templates::scxmlutil»

«DEFINE Root FOR StateMachine»
«FILE this.name+".xml"»
«REM» Write the headers «ENDREM»
«EXPAND Headers»
«REM» Select TopStates and explore «ENDREM»
	«FOREACH listStates().select(e|e.isTopState()).sortBy(e|e.name) AS st» 
		«EXPAND ExploreState FOR st»
	«ENDFOREACH»	
«REM» Outer FinalStates «ENDREM»
	«FOREACH this.allOwnedElements().typeSelect(FinalState).select(e|e.parentState().name.toString() == "null") AS st»
		<final id="«st.getFullName()»"/>
	«ENDFOREACH»
</scxml>
«ENDFILE»
«ENDDEFINE»


«REM» Write headers «ENDREM» 
«DEFINE Headers FOR StateMachine»
<scxml xmlns="http://www.w3.org/2005/07/scxml" 
		version="1.0" initial="«getInitialState().getFullName()»">
«ENDDEFINE»

«REM» Explore Generic States «ENDREM»
«DEFINE ExploreState FOR State»
	«IF this.isSimple()»
		«EXPAND ExploreSimpleState»
	«ELSE»
		«IF this.isComposite()»
			«EXPAND ExploreCompState»
		«ENDIF»
	«ENDIF»	
«ENDDEFINE»

«REM» Explore Simple States «ENDREM»
«DEFINE ExploreSimpleState FOR State»
	«IF this.isFinalState()»
		<final id="«this.getFullName()»"/>
	«ELSE»	
		<state id="«this.getFullName()»">
		«EXPAND ExploreActions»
		«EXPAND ExploreTransitions»
		</state>
	«ENDIF»
«ENDDEFINE»

«REM» Explore Complex States «ENDREM»
«DEFINE ExploreCompState FOR State»
	«IF this.isOrthogonal()»
		«EXPAND ExploreOrthState»
	«ELSEIF !this.listStates().isEmpty»
		<state id="«this.getFullName()»">
		<initial><transition target="«this.getInitialState().getFullName()»"/></initial>
		«FOREACH this.listCompChilds() AS cc»
			«EXPAND ExploreCompState FOR cc»
		«ENDFOREACH»
		«FOREACH this.listSimpleChilds() AS sc»
			«EXPAND ExploreSimpleState FOR sc»
		«ENDFOREACH»
		«IF this.hasHistory()»
			«EXPAND ExploreHistory»
		«ENDIF»
		«EXPAND ExploreActions»
		«EXPAND ExploreTransitions»
		</state>
	«ELSE»
		«EXPAND ExploreSimpleState»
	«ENDIF»
«ENDDEFINE»

«REM» Explore Orthogonal States «ENDREM»
«REM» Parallel Regions MUST have a nome in the ecore model  «ENDREM»
«REM» Parallel Regions are mapped as Complex states: a default state is needed «ENDREM»
«DEFINE ExploreOrthState FOR State»
	<parallel id="«this.getFullName()»">
		«FOREACH this.allOwnedElements().typeSelect(Region).select(e|(e.owner == this)) AS oreg»
		<state id="«oreg.getFullName()»">
			<initial><transition target="«oreg.getInitialState().getFullName()»"/></initial>
		«FOREACH oreg.allOwnedElements().typeSelect(State).select(e|(e.owner == oreg)) AS ost»
			«EXPAND ExploreState FOR ost»
		«ENDFOREACH»
		</state>
	«ENDFOREACH»
	«IF this.hasHistory()»
		«EXPAND ExploreHistory»
	«ENDIF»
	«EXPAND ExploreActions»
	«EXPAND ExploreTransitions»
	</parallel>
«ENDDEFINE»			

«REM» Explore Actions and Activities «ENDREM»
«DEFINE ExploreActions FOR State»
	«IF this.hasOnEntry()»<onentry><log expr="'«this.entry.name»'"/></onentry>«ENDIF»
	«IF this.hasDoActions()»
		«EXPAND Invoke» 
	«ENDIF» 
	«IF this.hasOnExit()»<onexit><log expr="'«this.exit.name»'"/></onexit>«ENDIF»
«ENDDEFINE»

«REM» Explore Transitions «ENDREM»
«DEFINE ExploreTransitions FOR State»
	«FOREACH this.outgoing.sortBy(e|e.name) AS tr»
		«IF tr.isInternalTransition()»
			«tr.getIntTransition()»
		«ELSE»
			«tr.getTransition()»
		«ENDIF»
	«ENDFOREACH»
«ENDDEFINE»

«REM» Explore History «ENDREM»
«DEFINE ExploreHistory FOR State»
	«FOREACH this.getHistory() AS hs»   
		<history id="«hs.container.getFullName()»:«hs.name»" «hs.historyType()»><transition target="«hs.outgoing.get(0).target.container.getFullName()»:«hs.outgoing.get(0).target.name»"/></history>
	«ENDFOREACH»
«ENDDEFINE»

«REM» At the moment <invoke> element calls an external state machine with the name of the Activity «ENDREM»
«REM» TODO: what we want to do with do-activities? «ENDREM»
«DEFINE Invoke FOR State»
<invoke targettype="scxml" id="«this.doActivity.name»" src="«this.doActivity.name».xml"/>
«ENDDEFINE»

 
«REM» «ENDREM» 
«REM» «ENDREM» 