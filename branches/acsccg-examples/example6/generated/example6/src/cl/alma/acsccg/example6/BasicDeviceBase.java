package cl.alma.acsccg.example6;

import java.util.logging.Level;
import java.util.logging.Logger;
import alma.ACS.ComponentStates;
import alma.acs.component.ComponentLifecycle;
import alma.acs.component.ComponentLifecycleException;
import alma.acs.container.ContainerServices;
import alma.ACSErrTypeCommon.CouldntPerformActionEx;
import alma.ACSErrTypeCommon.wrappers.AcsJCouldntPerformActionEx;
import alma.example6.BasicDeviceBaseOperations;

/*PROTECTED REGION ID(BasicDevice.ProtectedImports) ENABLED START*/
/* (non-javadoc!)
 * Autogenerated protected region, the imports in this protected area
 * are not generated, it's reserved to special features that they can't be
 * specified in the UML model
 */
/*PROTECTED REGION END*/

/* IDL Structs*/
import alma.example6.position_struct;

/*Notification Channel*/
import alma.acs.nc.Consumer;
import alma.example6.testMessageBlockEvent;

public class BasicDeviceBase
		implements
			ComponentLifecycle,
			BasicDeviceBaseOperations,
			IBasicDevice {

	private ContainerServices m_containerServices;
	private Logger m_logger;
	private Consumer m_consumer;

	/*PROTECTED REGION ID(BasicDevice.ProtectedAttributes) ENABLED START*/
	/* (non-javadoc!)
	 * Autogenerated protected region, the imports in this protected area
	 * are not generated, it's reserved for special features that they can't be
	 * specified in the UML model
	 */
	/*PROTECTED REGION END*/

	/* 
	 * Implementation of  ComponentLifecycle
	 */
	public void initialize(ContainerServices containerServices)
			throws ComponentLifecycleException {

		m_containerServices = containerServices;

		m_logger = m_containerServices.getLogger();
		m_logger.info("initialize() called...");

		try {
			m_consumer = new Consumer(
					alma.example6.CHANNELNAME_DEFAULTEXAMPLE6CHANNEL.value,
					m_containerServices);
			//Subscribe to a domain and event type.
			m_consumer.addSubscription(
					alma.example6.testMessageBlockEvent.class, this);
			m_consumer.consumerReady();
			m_logger
					.info(" BasicDevice  is waiting for 'testMessageBlockEvent' events.");
		} catch (Exception e) {
			if (m_consumer != null) {
				m_consumer.disconnect();
			}
			/*
			 if uncomment the next line, add  throws ComponentLifecycleException, but first check if is inhitered class, can not be override the method.
			the generator put the right code.
			 */
			throw new ComponentLifecycleException(
					"failed to connect as an event consumer to channel "
							+ alma.example6.CHANNELNAME_DEFAULTEXAMPLE6CHANNEL.value);
		}

		/*PROTECTED REGION ID(BasicDevice.ProtectedAttributes) ENABLED START*/
		/* (non-javadoc!)
		 * Autogenerated protected region, the imports in this protected area
		 * are not generated, it's reserved for special features that they can't be
		 * specified in the UML model
		 */
		/*PROTECTED REGION END*/
	}

	public void receive(alma.example6.testMessageBlockEvent event) {
		m_logger.info("Received an event: " + event.message);
	}

	public void execute() {
		m_logger.info("execute() called...");
	}

	public void cleanUp() {
		m_logger.info("cleanUp() called...");
	}

	public void aboutToAbort() {
		cleanUp();
		m_logger.info("aboutToAbort() called...");
	}

	/* 
	 * Implementation of ACSComponent
	 */
	public ComponentStates componentState() {
		return m_containerServices.getComponentStateManager().getCurrentState();
	}

	public String name() {
		return m_containerServices.getName();
	}

	/* 
	 * Definition of member BasicDeviceOperations
	 */

	public boolean getDeviceStatus() {
		/*PROTECTED REGION ID(BasicDevice.getDeviceStatus) ENABLED START*/
		return false;
		/*PROTECTED REGION END*/
	}

	public void setDeviceStatus(boolean status) {
		/*PROTECTED REGION ID(BasicDevice.setDeviceStatus) ENABLED START*/

		/*PROTECTED REGION END*/
	}

	/*
	 * Implements the Interface methods.
	 */
	@Override
	public String getDeviceID() {
		/*PROTECTED REGION ID(IBasicDevice.getDeviceID.ProtectedRegion) ENABLED START*/
		return new String();
		/*PROTECTED REGION END*/
	}

	@Override
	public void setDeviceID(String id) {
		/*PROTECTED REGION ID(IBasicDevice.setDeviceID.ProtectedRegion) ENABLED START*/

		/*PROTECTED REGION END*/
	}

	/*PROTECTED REGION ID(BasicDevice.ProtectedRegion) ENABLED START*/
	/* (non-javadoc!)
	 * Autogenerated protected region, the implementations in this protected area
	 * are not generated, it's reserved to special features that they can't be
	 * specified in the UML model
	 */
	/*PROTECTED REGION END*/
}
