«IMPORT uml»
«IMPORT JavaInheritanceOverride»
«IMPORT JavaInheritanceAllOverride»
«IMPORT JavaInterfaceImplements»
«IMPORT AlmaGenerator»

«EXTENSION templates::java::xJavaUtil»

«DEFINE Root FOR uml::Class»
    «EXPAND JavaComponent FOR this»
«ENDDEFINE»

«DEFINE JavaComponent FOR uml::Class»
    «FILE 'src/alma/acsgenerator/'+this.package.name+"/"+this.name+"Base.java"»
package alma.acsgenerator.«this.package.name»;

import java.util.logging.Logger;
import alma.ACS.ComponentStates;
import alma.acs.component.ComponentLifecycle;
import alma.acs.container.ContainerServices;
import alma.«this.package.name».«this.name»BaseOperations;
«REM»Get the idl struct from the model, and add the to the imports«ENDREM»
«PROTECT CSTART '/*' CEND '*/' ID this.name+"ProtectedImports"»
/* (non-javadoc!)
 * Autogenerated protected region, the imports in this protected area
 * are not generated, it's reserved to special features that they can't be
 * specified in the UML model
 */
«ENDPROTECT»
«REM»Get the idl struct from the model, and add the to the imports«ENDREM»
«FOREACH this.eRootContainer.eContents.typeSelect(uml::Class) AS class-»
    «IF isIDLStruct(class)-»
import alma.«this.package.name».«class.name-»;
    «ENDIF-»
«ENDFOREACH-»

public class «this.name»Base implements ComponentLifecycle, «this.name»BaseOperations«IF haveInterfaces(this)»«FOREACH this.getAllImplementedInterfaces() AS interface», «interface.name»«ENDFOREACH-»«ENDIF»«IF isInherited(this)» extends «getParentName(this)» «ENDIF»
{
    private ContainerServices m_containerServices;
    private Logger m_logger;
    
    «PROTECT CSTART '/*' CEND '*/' ID this.name+"ProtectedAttributes"»
	/* (non-javadoc!)
	 * Autogenerated protected region, the imports in this protected area
	 * are not generated, it's reserved for special features that they can't be
	 * specified in the UML model
	 */
	«ENDPROTECT»
    
    /* 
     * Implementation of  ComponentLifecycle
     */
    public void initialize(ContainerServices containerServices) {
        m_containerServices = containerServices;
        m_logger = m_containerServices.getLogger();
        m_logger.info("initialize() called...");
    }
    
    public void execute() {
        m_logger.info("execute() called...");
    }
    
    public void cleanUp() {
        m_logger.info("cleanUp() called...");
    }
    
    public void aboutToAbort() {
        cleanUp();
        m_logger.info("aboutToAbort() called...");
    }
    
    /* 
     * Implementation of ACSComponent
     */
    public ComponentStates componentState() {
        return m_containerServices.getComponentStateManager().getCurrentState();
    }
    
    public String name() {
        return m_containerServices.getName();
    }
    
    /* 
     * Definition of member «this.name»Operations
     */
  
    «FOREACH this.getOperations() AS operation-»
    public «getJavaReturnType(operation)» «operation.name-»(«FOREACH operation.ownedParameter.select(e|e.direction.toString()!= 'return') AS param SEPARATOR ', '-»«getJavaParam(param)» «param.name»«ENDFOREACH-») 
    {
    	«PROTECT CSTART '/*' CEND '*/' ID operation.name»
    «IF ! isVoid(operation)»return «getReturnValue(operation)»;«ENDIF-»   
    	«ENDPROTECT»   
    }
    
    «ENDFOREACH-»
    «IF isOverride(this) &&  !isAllOverride(this) -»
	«EXPAND JavaInheritanceOverride::Root FOR this-» 
	«ELSEIF isAllOverride(this)-»
	«EXPAND JavaInheritanceAllOverride::Root FOR this-» 
	«ENDIF-»
	«IF haveInterfaces(this)-»
	«EXPAND JavaInterfaceImplements::Root FOR this-» 
	«ENDIF-»
	
	«PROTECT CSTART '/*' CEND '*/' ID this.name+"ProtectedRegion"»
	/* (non-javadoc!)
	 * Autogenerated protected region, the implementations in this protected area
	 * are not generated, it's reserved to special features that they can't be
	 * specified in the UML model
	 */
    «ENDPROTECT»
}
  «ENDFILE»
«ENDDEFINE»
    