#summary Project Charter for ACS Component Code Generation

= Project Charter  =

== Project Charter Purpose ==
This section describes the overall plan to be used by the ACS Component Code Generation  project, including deployment of the product.

== Definitions Acronyms and Abreviations ==

The next acronyms or abreviations are used in the document:

    * EMF : Eclipse Modeling Framework, a framework of Eclipse to create plug-ins, Eclipse Applications for code generation base in Model-Driven.
    * ACS : Alma Common Software, more info at ACS.
    * oWA : Open Architecture Ware, a free open architecture for code generation.
    * XMI : XML Metadata Interchange, standard for exchanging metadata information via Extensible Markup Language (XML).
    * UML : Unified Modeling Languag, is a standardized general-purpose modeling language in the field of software engineering.
    * NC : Notification Channles of ACS. 

== Objectives  ==

ACS (Alma Common Software) could do with more automatically generated code. It should be possible to write software components that use the framework in an easier way than its done today. Having this in mind it's proposed a project that continues the thesis of NicolasTroncoso that accomplishes:

    * Code generation starting from a model UML.
    * Generate code for one of the ACS supported languages; in particular, Java.
    * Have a Standalone Code Generator
    * Inheritance support between generated and non-generated code. This is required to provide support for more complex models.
    * Notification Channels Support, defined in the model. 

== Roles and Responsibilities  ==

The project structure is embedded in the current ALMA project structure. Key members of the teams identified as critical to the project are:

    * Alexis Tejeda (UCN) Developer, Deployment Manager, Requirements Reviewer, Architecture Reviewer, Configuration Manager, Change Control Manager .
    * Gianluca Chiozzi (ESO) Client, End User, Requirements Reviewer, Change Control Manager.
    * Luigi Andolfa (ESO) Requirements Reviewer.
    * Robert Karban (ESO) Requirements Reviewer.
    * Heiko Sommer (ESO) Requirements Reviewer.
    * Jorge Ibsen (ESO / JAO Computing Manager)Project Manager, Requirements Reviewer.
    * NicolasTroncoso (JAO/AUI) Project Manager, Requirements Reviewer, Architecture Reviewer. 

== Project Overview  ==

ACS is a complex framework, as it relates to the creation of new components, whether implemented in Java, C + + or Python, and is a very repetitive task of creating these components, so here is where code generator speeds up the development process by predefined metamodels, in this case, UML diagramas in a XMI 2.0 format standard, a Model Driven Code Generator (MDCG).

The project will cover and continue the work already done by NicolasTroncoso proposed in his thesis as a 'Future Work', like the implementation of inheritance, more complex models, separation of implemented and generated classes and have a full implemented code generator for ACS.

The actual status of the project, is that only is generating a basic code from UML models (M.A.R.S. models) in oAW 4.x.x using pre-defined templates, this is a part is the thesis of Nicolas Troncoso.

== Goals and Objectives  ==

The main goal/objective in the project is have a full Standalone Java Code Generator for Alma Common Software under Eclipse Modeling Framework, this is divided in specific objectives:

=== Managment of complex UML Models ===

In complex UML models, the use of stereotypes that allow to filter the models to generate, this mean that a class will have a stereotype to identify if this class will be generated or not, this is for not re-write classes already generated. This objective is considered a critical factor for the success of the project.

=== Alma Common Software - Notification Channels ===

A full code generation support for ACS Notification Channels, generate all necessary code from a UML model that represents the association between the Publisher and Subscribers, the generator must be able to generate the ready-to-implement code for Notification Channels. This objective is considered a critical factor for the success of the project.

=== Standalone Code Generator ===

The development of the generator should be under the EMF, however one of the critical requirements is have the generator as Standalone, this means that the generator have to work outside the Eclipse IDE dinamicly with any UML model/metamodel specified by command line. The generator have to generate all the classes, plus empty skelletons for the user implementation. or regenerate only the basic classes, this mean only generates the templates for user modification. This objective is considered a critical factor for the success of the project.

=== The generated code must be Java ===

At first, all the code generated must be in Java, later, if the time allow, then implement the code generator templates for C++ and Python, it's more importante in this project have a full support Java for the code generated than a semi-implementation of all programming languages.

=== Separation between the generated classes and implemented classes ===

Complete the separation between the generated classes and the implemented classes, this mean the code generator has to know how to separate the implemented classes and the already generated classes for the code generation for not overwriting.

=== Inheritance implementation ===

Actually, the implementation in the generator of model-inheritance is not fully supported, the developers should define how implement this model behavior in the code generator without affect all work already done.

=== Generic UML Profile (Stereotype) ===

The idea is to have a generic profile that could be used also to model VLT and other systems.

== Project Scope ==

The project scope cover the development of the Component Code Generator for ACS, initially the project will only generate the Java code implementation from a UML model under the XMI2.0 standard, in which there are two importants point:

    * A Standalone Java Code Generator: the development of the generator should be under the EMF, however the generator shold be a Standalone appliacation, this means that the generator have to work outside the Eclipse IDE dinamicly with any UML model/metamodel specified by command line. The generator have to generate all the classes, plus empty skelletons for the user implementation. or regenerate only the basic classes, this mean only generates the templates for user modification. This objective is considered a critical factor for the success of the project.  

    * Code Generator based on oAW 5 or EMF: Since oAW 5, oWA is under the Eclipse Umbrella, this mean that oAW 5 is under the EMF and oAW is MWE (EMFT) + Xpand (M2T ) +Xtext (TMF), it's a critical requirement from Nicolas Troncoso , also, the project would have a better software support using standard modeling tools like EMF.

This factors are deemed critical to the success of a project, such that, in their absence the project will fail. 

== Project Control  ==

    * Discuss first of all the modeling aspects
    * Develop examples to verify that the modeling is convenient, feasible and it is possible to implement the generator
    * Implement and test one feature at the time
    * Archive every few days all the work. In every case never less than once a week. Mark with tags bungles of work that are supposed to work and should be tested. Always archive one feature at the time, so that the other partners can test any new feature.
    * Make sure that the examples cover all aspects and that every feature is tested through examples.
    * Keep a tight discussion cycle, with frequent iterations. Otherwise the risk is that of implementing the wrong things.  

== Assumptions ==

Since the project is strongly based on oAW, it will continues based in oAW 5, is assumed that the project always be based in oAW with posiblities to expand to even more complex models and other types of metamodels according to the XMI 2.0 standard format, not only for ACS also to other frameworks at ALMA.

== Project Authority ==

This project is considered as part of the regular work at the ALMA project of the involved parts:

    * Joint ALMA Observatory (JAO/AUI), OSF, Chile 

    * National Radio Astronomy Observatory (NRAO), Socorro, NM, U.S.A. 

    * Universidad Técnica Federico Santa María (UTFSM), Valparaíso, Chile 

    * Universidad Católica del Norte (UCN), Antofagasta, Chile

Due of the importance of the project must have a non-stop support for the new requirements that may araise in any moment, assuming that the final product will be used continuosly.

The biggest expectations of the whole project is what the code generator will be used constantly and continues to grow in their use, development and support, this is because it will shorten development and desing times, also improve the communication betwen the diferent areas at ALMA and ALMA Computing Group.

The license of the project and all its derivables, it is assumed by default a General Public License v3 (GPLv3) and eventually ALMA could change the license without notice. 


== Project Deliverables ==

    * Standalone Code Generator : This is the major deriverable in the project, is the full software to generate a complete Java code for ACS starting from any UML model/metamodel.
    * Source Code : The complete source code hosted in the repository
    * Repository Access : Access to the project repository for patch, get or update future developments.
    * Developer Notes : Hackings and special configurations in the project development.
    * Documentation : This will have the source code documentation, the Installation and Configuration Manual, Developers Guide and User Manual.

== Project Structure ==

The organizational makeup of the project team and stakeholders.

The project structure is embedded in the current ALMA project structure. Key members of the teams identified as critical to the project are:

    * Nicolas Troncoso (JAO/AUI) 
    * Alexis Tejeda (UCN)
    * Gianluca Chiozzi (ESO)
    * Luigi Andolfa (ESO)
    * Robert Karban (ESO)
    * Heiko Sommer (ESO)
    * Jorge Ibsen (ESO / JAO Computing Manager) 

== Project Discussion  ==

http://almasw.hq.eso.org/almasw/bin/view/JAO/ACSCodeGenerationDiscuss

== References  == 

    * [http://almasw.hq.eso.org/almasw/bin/view/JAO/EthernetDeviceCodeGeneration Ethernet Device Code Generator Extension] (JAO/CONTROL project)
    * [http://almasw.hq.eso.org/almasw/bin/view/JAO/TomasStaigSummerJob Refactoring of the AMB Code Generation Framework] (Tomas Staig's summer job)
    * [http://almasw.hq.eso.org/almasw/bin/view/CONTROL/MatiasMoraSummerJob AMB Device Simulation Framework] (Matias Mora's summer job)
    * [http://almasw.hq.eso.org/almasw/bin/view/ACS/StateMachinesCG200901 State Machine Code Generation for ACS Components] (Arturo Hoffstadt's summer job)
    * [https://csrg.inf.utfsm.cl/twiki4/pub/ACS/AlmaTheses/thesis-mmora08.pdf Towards a Generic Hardware Device Simulation Framework applied to Telescope Control Systems] (Matias Mora's thesis)
    * [https://csrg.inf.utfsm.cl/twiki4/pub/ACS/AlmaTheses/thesis-ntroncos09.pdf ACS Component Code Generation Framework] (Nicolas Troncoso's thesis) 
    *[http://almasw.hq.eso.org/almasw/bin/view/JAO/ACSCodeGeneration Component Code Generator for ACS] (Alexis Tejeda summer job)