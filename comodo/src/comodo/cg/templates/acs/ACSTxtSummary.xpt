«REM»
/**
 * COMODO - Multiplatform Component Code Generator 
 * Copyright (C) 2010/2011  Alexis Tejeda, alexis.tejeda@gmail.com
 * in colaboration with ESO.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 *
 * who          when      		what
 * ---------    -----------     ------------------------------------------------
 * atejeda 	    2011-00-00  	Created
 * 
 * $Id: ACSSummary.xpt 170 2011-01-13 13:07:52Z alexis.tejeda $
 */
«ENDREM»

«IMPORT uml»

«EXTENSION cg::templates::zzutil::zzzacshelpers»

«DEFINE Root FOR uml::Model»
«FILE  'summary_'+getPackage(this).name+'.txt'-»
************************************************************************************
# COMODO - Multiplatform Component Code Generator 
# Summary of the components generated for development environment
************************************************************************************

-- License
/*******************************************************************************
 * COMODO - Multiplatform Component Code Generator 
 * Copyright (C) 2010/2011  Alexis Tejeda, alexis.tejeda@gmail.com
 * in colaboration with ESO.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 *
 * "@(#) «getPropSet('Id')»"
 *
 * who                 when                             what
 * ----------------    -----------------------------    ------------------------
 * COMODO              «getCommentDate()»     Creation of the file
 * 
 */
 -- License

EModule: «getPackage(this).name»

TopologicalSort of Structs
************************************************************************************
«FOREACH  getETopicSorted(getETopics(getPackage(this))) AS experiment-»
	|-«experiment.name»
«ENDFOREACH»

EComponents:
************************************************************************************
«FOREACH getEComponents(getPackage(this)) AS eElement -»
	|-«eElement.name»
«ENDFOREACH»

EComponentsImpl:
************************************************************************************
«FOREACH getEComponentsImpl(getPackage(this)) AS eElement -»
	«eElement.name»
	«FOREACH getEManifestations(eElement) AS eManifestationContainer-»
	 |_	Manifestation:
			«FOREACH getESuppliers(eManifestationContainer) AS eManifestationClass-»
	 |		|_«eManifestationClass.name»
	 |			|_RealizationsImpl:
					«FOREACH ((uml::Class) eManifestationClass).interfaceRealization.client AS eInterface-»
	 |				|_«eInterface.name»
					«ENDFOREACH-»
			«ENDFOREACH-»
	«ENDFOREACH-»
«ENDFOREACH-»

EInterfaces:
************************************************************************************
«FOREACH getEInterfaces(getPackage(this)) AS eElement -»
	|-«eElement.name» «IF isECharacteristic(eElement)»(Characteristic)«ENDIF»
«ENDFOREACH»

EChannels:
************************************************************************************
	|-EPublish
«FOREACH getNREChannelNames(getEPublishers(getPackage(this))) AS eElement -»
	|	|-«eElement.type.name»
«ENDFOREACH-»
	|
	|-ESubscribe
«FOREACH getNREChannelNames(getEPublishers(getPackage(this))) AS eElement -»
	|	|-«eElement.type.name»
«ENDFOREACH-»
	|
	|-ESubscribe-EPublish non-repeated channels name
«FOREACH getNREChannelNames(getNCDefinitions(getPackage(this))) AS eElement -»
	|	|-«eElement.type.name»
«ENDFOREACH»

EContainers:
************************************************************************************
«FOREACH getEContainers(getPackage(this)) AS eElement -»
	|-«eElement.name»
«ENDFOREACH»

EEnumerations:
************************************************************************************
«FOREACH getEEnumerations(getPackage(this)) AS eElement -»
	|-«eElement.name»
«ENDFOREACH»

External Signals:
************************************************************************************
«FOREACH getPackage(this).getModel().allOwnedElements().typeSelect(uml::Signal) AS eElement -»
	«IF getPackage(this).allOwnedElements().typeSelect(uml::Signal).select(e|e.name == eElement.name).isEmpty-»
	|-«eElement.package.name»::«eElement.name»
	«ENDIF-»
«ENDFOREACH»

StateMachines:
************************************************************************************
«FOREACH getPackage(this).getModel().allOwnedElements().typeSelect(uml::StateMachine) AS eElement -»
	|-«eElement»
«ENDFOREACH»

StateMachines Used:
************************************************************************************
«FOREACH getEComponentsImpl(getPackage(this)) AS eElement -»
  	«FOREACH getEManifestations(eElement) AS eManifestationContainer-»
	«FOREACH getESuppliers(eManifestationContainer) AS eManifestationClass-»
	 |_«eManifestationClass.classifierBehavior.name» in «eManifestationClass.name»
	«ENDFOREACH-»
  	«ENDFOREACH-»
«ENDFOREACH-»

___oOo___
«ENDFILE»
«ENDDEFINE»